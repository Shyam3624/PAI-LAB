{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO90I6Es0fWmia65aKKrmmS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Shyam3624/PAI-LAB/blob/main/IMLipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "mpKfLo_4xeGb"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
        "from sklearn.model_selection import train_test_split\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Load the dataset\n",
        "df = pd.read_csv('/content/archive.zip')\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(df.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WPLeIBOQxrVC",
        "outputId": "94d642f1-4b81-4ae8-dae8-f8e4f1b14241"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   StudentID  Age  Gender  Ethnicity  ParentalEducation  StudyTimeWeekly  \\\n",
            "0       1001   17       1          0                  2        19.833723   \n",
            "1       1002   18       0          0                  1        15.408756   \n",
            "2       1003   15       0          2                  3         4.210570   \n",
            "3       1004   17       1          0                  3        10.028829   \n",
            "4       1005   17       1          0                  2         4.672495   \n",
            "\n",
            "   Absences  Tutoring  ParentalSupport  Extracurricular  Sports  Music  \\\n",
            "0         7         1                2                0       0      1   \n",
            "1         0         0                1                0       0      0   \n",
            "2        26         0                2                0       0      0   \n",
            "3        14         0                3                1       0      0   \n",
            "4        17         1                3                0       0      0   \n",
            "\n",
            "   Volunteering       GPA  GradeClass  \n",
            "0             0  2.929196         2.0  \n",
            "1             0  3.042915         1.0  \n",
            "2             0  0.112602         4.0  \n",
            "3             0  2.054218         3.0  \n",
            "4             0  1.288061         4.0  \n"
          ]
        }
      ]
    },
    {
      "source": [
        "# Check for missing values\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Replace missing values for numerical columns with the median\n",
        "numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns\n",
        "imputer = SimpleImputer(strategy='median')\n",
        "df[numerical_cols] = imputer.fit_transform(df[numerical_cols])\n",
        "\n",
        "# Replace missing values for categorical columns with the most frequent value\n",
        "# Check if there are any categorical columns first\n",
        "categorical_cols = df.select_dtypes(include=['object']).columns\n",
        "if len(categorical_cols) > 0:  # Proceed only if there are categorical columns\n",
        "    imputer = SimpleImputer(strategy='most_frequent')\n",
        "    df[categorical_cols] = imputer.fit_transform(df[categorical_cols])\n",
        "else:\n",
        "    print(\"No categorical columns found in the DataFrame.\")"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0sqY1_Vo0bpj",
        "outputId": "6963af36-0f9e-4706-9884-f1806c19833c"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "StudentID            0\n",
            "Age                  0\n",
            "Gender               0\n",
            "Ethnicity            0\n",
            "ParentalEducation    0\n",
            "StudyTimeWeekly      0\n",
            "Absences             0\n",
            "Tutoring             0\n",
            "ParentalSupport      0\n",
            "Extracurricular      0\n",
            "Sports               0\n",
            "Music                0\n",
            "Volunteering         0\n",
            "GPA                  0\n",
            "GradeClass           0\n",
            "dtype: int64\n",
            "No categorical columns found in the DataFrame.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove duplicate rows\n",
        "df = df.drop_duplicates()\n"
      ],
      "metadata": {
        "id": "tiCnO9Ec0faN"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Example: Detecting outliers in the 'Age' column\n",
        "Q1 = df['Age'].quantile(0.25)\n",
        "Q3 = df['Age'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Define the bounds for outliers\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# Replace outliers with the median value\n",
        "median_age = df['Age'].median()\n",
        "df.loc[(df['Age'] < lower_bound) | (df['Age'] > upper_bound), 'Age'] = median_age\n"
      ],
      "metadata": {
        "id": "jW8BuImg0pxd"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "# Assuming df is your DataFrame\n",
        "label_encoder = LabelEncoder()\n",
        "\n",
        "# Apply Label Encoding to the Ethnicity and ParentalEducation columns\n",
        "df['Ethnicity'] = label_encoder.fit_transform(df['Ethnicity'])\n",
        "df['ParentalEducation'] = label_encoder.fit_transform(df['ParentalEducation'])\n",
        "\n",
        "print(df[['Ethnicity', 'ParentalEducation']].head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5dQ2icNU2MBY",
        "outputId": "783f49ea-fa1d-43df-c932-cdfbd6dcd0ee"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Ethnicity  ParentalEducation\n",
            "0          0                  2\n",
            "1          0                  1\n",
            "2          2                  3\n",
            "3          0                  3\n",
            "4          0                  2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Apply One-Hot Encoding to the Ethnicity and ParentalEducation columns\n",
        "df = pd.get_dummies(df, columns=['Ethnicity', 'ParentalEducation'], drop_first=True)\n",
        "\n",
        "print(df.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UOuMBJXJ2Oj3",
        "outputId": "bae7ed9c-b2ed-4ffa-8ce7-64c3cf054b43"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   StudentID   Age  Gender  StudyTimeWeekly  Absences  Tutoring  \\\n",
            "0     1001.0  17.0     1.0        19.833723       7.0       1.0   \n",
            "1     1002.0  18.0     0.0        15.408756       0.0       0.0   \n",
            "2     1003.0  15.0     0.0         4.210570      26.0       0.0   \n",
            "3     1004.0  17.0     1.0        10.028829      14.0       0.0   \n",
            "4     1005.0  17.0     1.0         4.672495      17.0       1.0   \n",
            "\n",
            "   ParentalSupport  Extracurricular  Sports  Music  Volunteering       GPA  \\\n",
            "0              2.0              0.0     0.0    1.0           0.0  2.929196   \n",
            "1              1.0              0.0     0.0    0.0           0.0  3.042915   \n",
            "2              2.0              0.0     0.0    0.0           0.0  0.112602   \n",
            "3              3.0              1.0     0.0    0.0           0.0  2.054218   \n",
            "4              3.0              0.0     0.0    0.0           0.0  1.288061   \n",
            "\n",
            "   GradeClass  Ethnicity_1  Ethnicity_2  Ethnicity_3  ParentalEducation_1  \\\n",
            "0         2.0        False        False        False                False   \n",
            "1         1.0        False        False        False                 True   \n",
            "2         4.0        False         True        False                False   \n",
            "3         3.0        False        False        False                False   \n",
            "4         4.0        False        False        False                False   \n",
            "\n",
            "   ParentalEducation_2  ParentalEducation_3  ParentalEducation_4  \n",
            "0                 True                False                False  \n",
            "1                False                False                False  \n",
            "2                False                 True                False  \n",
            "3                False                 True                False  \n",
            "4                 True                False                False  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "scaled_features = ['GradeClass']  # Replace with your feature names\n",
        "df[scaled_features] = scaler.fit_transform(df[scaled_features])"
      ],
      "metadata": {
        "id": "s8ERqM9Q2TRc"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('GradeClass', axis=1)  # Features\n",
        "y = df['GradeClass']  # Target variable\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "print(\"Training features:\\n\", X_train)\n",
        "print(\"Training target:\\n\", y_train)\n",
        "print(\"Testing features:\\n\", X_test)\n",
        "print(\"Testing target:\\n\", y_test)"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9owrBmnR4BxY",
        "outputId": "f89e7cb1-553b-4f48-8d96-6b6cdf3db100"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training features:\n",
            "       StudentID       Age  Gender  StudyTimeWeekly  Absences  Tutoring  \\\n",
            "642      1643.0  1.362944     1.0        18.118879      24.0       1.0   \n",
            "1752     2753.0 -0.417106     1.0         2.469271      19.0       0.0   \n",
            "1401     2402.0  0.472919     0.0         3.456401      25.0       0.0   \n",
            "2032     3033.0  0.472919     1.0        15.838131      25.0       1.0   \n",
            "990      1991.0 -0.417106     0.0         1.045373      19.0       1.0   \n",
            "...         ...       ...     ...              ...       ...       ...   \n",
            "1638     2639.0 -1.307132     0.0        13.092424      13.0       1.0   \n",
            "1095     2096.0 -0.417106     0.0         2.159249      19.0       0.0   \n",
            "1130     2131.0 -0.417106     1.0         3.572578      14.0       1.0   \n",
            "1294     2295.0  1.362944     0.0         4.402585      20.0       0.0   \n",
            "860      1861.0  1.362944     0.0         5.427628      27.0       0.0   \n",
            "\n",
            "      ParentalSupport  Extracurricular  Sports  Music  Volunteering       GPA  \\\n",
            "642               0.0              1.0     1.0    0.0           0.0 -0.557298   \n",
            "1752              1.0              0.0     0.0    0.0           1.0 -1.258448   \n",
            "1401              0.0              0.0     0.0    0.0           0.0 -1.934524   \n",
            "2032              2.0              0.0     0.0    0.0           0.0 -0.802211   \n",
            "990               2.0              0.0     0.0    1.0           0.0 -0.173591   \n",
            "...               ...              ...     ...    ...           ...       ...   \n",
            "1638              1.0              0.0     0.0    0.0           0.0 -0.339422   \n",
            "1095              4.0              0.0     1.0    0.0           0.0 -0.417766   \n",
            "1130              2.0              1.0     1.0    0.0           0.0  0.159277   \n",
            "1294              3.0              0.0     0.0    0.0           0.0 -0.608973   \n",
            "860               2.0              0.0     0.0    0.0           0.0 -2.070160   \n",
            "\n",
            "      Ethnicity_1  Ethnicity_2  Ethnicity_3  ParentalEducation_1  \\\n",
            "642         False        False        False                False   \n",
            "1752        False        False         True                False   \n",
            "1401        False         True        False                False   \n",
            "2032        False        False        False                 True   \n",
            "990         False        False        False                False   \n",
            "...           ...          ...          ...                  ...   \n",
            "1638         True        False        False                False   \n",
            "1095        False        False        False                False   \n",
            "1130        False        False        False                False   \n",
            "1294        False        False         True                False   \n",
            "860          True        False        False                False   \n",
            "\n",
            "      ParentalEducation_2  ParentalEducation_3  ParentalEducation_4  \n",
            "642                 False                False                 True  \n",
            "1752                 True                False                False  \n",
            "1401                False                 True                False  \n",
            "2032                False                False                False  \n",
            "990                 False                False                False  \n",
            "...                   ...                  ...                  ...  \n",
            "1638                False                False                False  \n",
            "1095                 True                False                False  \n",
            "1130                 True                False                False  \n",
            "1294                 True                False                False  \n",
            "860                  True                False                False  \n",
            "\n",
            "[1913 rows x 19 columns]\n",
            "Training target:\n",
            " 642     0.823819\n",
            "1752    0.823819\n",
            "1401    0.823819\n",
            "2032    0.823819\n",
            "990     0.823819\n",
            "          ...   \n",
            "1638    0.823819\n",
            "1095    0.823819\n",
            "1130    0.013216\n",
            "1294    0.823819\n",
            "860     0.823819\n",
            "Name: GradeClass, Length: 1913, dtype: float64\n",
            "Testing features:\n",
            "       StudentID       Age  Gender  StudyTimeWeekly  Absences  Tutoring  \\\n",
            "1004     2005.0 -1.307132     1.0         0.135763      17.0       0.0   \n",
            "196      1197.0 -0.417106     1.0         1.989925       0.0       0.0   \n",
            "2342     3343.0 -1.307132     0.0        10.588715      15.0       0.0   \n",
            "1708     2709.0  1.362944     1.0        16.208658       1.0       0.0   \n",
            "435      1436.0  1.362944     0.0         3.576821      27.0       0.0   \n",
            "...         ...       ...     ...              ...       ...       ...   \n",
            "986      1987.0  1.362944     1.0         8.412605      16.0       0.0   \n",
            "120      1121.0  1.362944     1.0         3.170405      12.0       1.0   \n",
            "283      1284.0  0.472919     0.0         5.141922       5.0       1.0   \n",
            "1740     2741.0  1.362944     1.0        10.281614      10.0       0.0   \n",
            "1726     2727.0  1.362944     1.0        15.610436      26.0       0.0   \n",
            "\n",
            "      ParentalSupport  Extracurricular  Sports  Music  Volunteering       GPA  \\\n",
            "1004              2.0              0.0     1.0    1.0           1.0 -0.522929   \n",
            "196               1.0              1.0     0.0    0.0           1.0  1.323732   \n",
            "2342              3.0              0.0     0.0    0.0           1.0  0.143811   \n",
            "1708              3.0              1.0     0.0    0.0           0.0  1.794970   \n",
            "435               1.0              0.0     1.0    0.0           0.0 -1.811228   \n",
            "...               ...              ...     ...    ...           ...       ...   \n",
            "986               3.0              0.0     1.0    0.0           0.0 -0.375782   \n",
            "120               1.0              1.0     1.0    0.0           0.0  0.293691   \n",
            "283               1.0              0.0     0.0    0.0           0.0  0.465979   \n",
            "1740              3.0              1.0     0.0    0.0           0.0  0.952803   \n",
            "1726              3.0              0.0     0.0    0.0           0.0 -1.139543   \n",
            "\n",
            "      Ethnicity_1  Ethnicity_2  Ethnicity_3  ParentalEducation_1  \\\n",
            "1004        False         True        False                False   \n",
            "196         False        False        False                False   \n",
            "2342        False        False        False                False   \n",
            "1708         True        False        False                False   \n",
            "435         False        False        False                False   \n",
            "...           ...          ...          ...                  ...   \n",
            "986         False        False        False                False   \n",
            "120         False        False        False                False   \n",
            "283         False        False        False                 True   \n",
            "1740         True        False        False                False   \n",
            "1726        False        False        False                False   \n",
            "\n",
            "      ParentalEducation_2  ParentalEducation_3  ParentalEducation_4  \n",
            "1004                False                False                 True  \n",
            "196                 False                False                 True  \n",
            "2342                False                False                False  \n",
            "1708                 True                False                False  \n",
            "435                 False                False                False  \n",
            "...                   ...                  ...                  ...  \n",
            "986                  True                False                False  \n",
            "120                 False                 True                False  \n",
            "283                 False                False                False  \n",
            "1740                False                False                False  \n",
            "1726                False                False                False  \n",
            "\n",
            "[479 rows x 19 columns]\n",
            "Testing target:\n",
            " 1004    0.823819\n",
            "196    -1.607990\n",
            "2342   -0.797387\n",
            "1708   -2.418592\n",
            "435     0.823819\n",
            "          ...   \n",
            "986     0.823819\n",
            "120     0.013216\n",
            "283     0.013216\n",
            "1740   -0.797387\n",
            "1726    0.823819\n",
            "Name: GradeClass, Length: 479, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('preprocessed_dataset.csv', index=False)"
      ],
      "metadata": {
        "id": "UpIjo9-g4H6e"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the dataset\n",
        "file_path = '/content/archive.zip'  # Replace with your actual file path\n",
        "df = pd.read_csv(file_path)\n",
        "\n",
        "# Display the first few rows of the dataset to understand its structure\n",
        "print(df.head())\n",
        "\n",
        "# Drop non-numeric columns if necessary (e.g., identifiers)\n",
        "if 'StudentID' in df.columns:\n",
        "    df = df.drop('StudentID', axis=1)\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('GradeClass', axis=1)  # Features\n",
        "y = df['GradeClass']  # Target variable\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Feature scaling\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "\n",
        "# Apply PCA\n",
        "pca = PCA()\n",
        "X_train_pca = pca.fit_transform(X_train_scaled)\n",
        "X_test_pca = pca.transform(X_test_scaled)\n",
        "\n",
        "# Explained variance ratio\n",
        "explained_variance_ratio = pca.explained_variance_ratio_\n",
        "cumulative_explained_variance = explained_variance_ratio.cumsum()\n",
        "\n",
        "# Print explained variance ratio and cumulative explained variance\n",
        "print(\"Explained Variance Ratio for each Principal Component:\\n\", explained_variance_ratio)\n",
        "print(\"Cumulative Explained Variance Ratio:\\n\", cumulative_explained_variance)\n",
        "\n",
        "# Plot explained variance\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.plot(range(1, len(explained_variance_ratio) + 1), cumulative_explained_variance, marker='o', linestyle='--')\n",
        "plt.xlabel('Number of Principal Components')\n",
        "plt.ylabel('Cumulative Explained Variance')\n",
        "plt.title('PCA - Explained Variance vs. Number of Components')\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# Choose number of components based on cumulative explained variance\n",
        "n_components = 2  # Example: choose 2 components\n",
        "pca = PCA(n_components=n_components)\n",
        "X_train_pca = pca.fit_transform(X_train_scaled)\n",
        "X_test_pca = pca.transform(X_test_scaled)\n",
        "\n",
        "print(\"Transformed Training Data:\\n\", X_train_pca)\n",
        "print(\"Transformed Testing Data:\\n\", X_test_pca)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dG7Owia651qT",
        "outputId": "9634087c-8b53-4f1d-b88d-178dae23265a"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   StudentID  Age  Gender  Ethnicity  ParentalEducation  StudyTimeWeekly  \\\n",
            "0       1001   17       1          0                  2        19.833723   \n",
            "1       1002   18       0          0                  1        15.408756   \n",
            "2       1003   15       0          2                  3         4.210570   \n",
            "3       1004   17       1          0                  3        10.028829   \n",
            "4       1005   17       1          0                  2         4.672495   \n",
            "\n",
            "   Absences  Tutoring  ParentalSupport  Extracurricular  Sports  Music  \\\n",
            "0         7         1                2                0       0      1   \n",
            "1         0         0                1                0       0      0   \n",
            "2        26         0                2                0       0      0   \n",
            "3        14         0                3                1       0      0   \n",
            "4        17         1                3                0       0      0   \n",
            "\n",
            "   Volunteering       GPA  GradeClass  \n",
            "0             0  2.929196         2.0  \n",
            "1             0  3.042915         1.0  \n",
            "2             0  0.112602         4.0  \n",
            "3             0  2.054218         3.0  \n",
            "4             0  1.288061         4.0  \n",
            "Explained Variance Ratio for each Principal Component:\n",
            " [0.15276706 0.0879509  0.08380769 0.08021247 0.08018712 0.07739386\n",
            " 0.07562915 0.07477465 0.07428179 0.07275351 0.07047761 0.06797994\n",
            " 0.00178424]\n",
            "Cumulative Explained Variance Ratio:\n",
            " [0.15276706 0.24071797 0.32452566 0.40473813 0.48492525 0.56231911\n",
            " 0.63794827 0.71272291 0.7870047  0.85975822 0.93023582 0.99821576\n",
            " 1.        ]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transformed Training Data:\n",
            " [[-1.07907245  0.42800948]\n",
            " [-1.66784145 -1.37505896]\n",
            " [-2.77305218 -0.17862269]\n",
            " ...\n",
            " [ 0.15821305  1.24478939]\n",
            " [-0.97808034 -0.70438647]\n",
            " [-2.7127334  -0.66022993]]\n",
            "Transformed Testing Data:\n",
            " [[-7.88736307e-01 -1.32367284e+00]\n",
            " [ 1.49229560e+00 -1.76969724e+00]\n",
            " [ 1.14714078e-01 -1.74008603e-02]\n",
            " [ 2.49448712e+00 -1.18978950e+00]\n",
            " [-2.54658625e+00  6.34113161e-01]\n",
            " [ 1.15832635e+00  3.34189558e-01]\n",
            " [-2.62197047e-01  1.01416443e+00]\n",
            " [ 6.45332411e-01  1.33736694e+00]\n",
            " [ 4.85672680e-01  1.53791324e+00]\n",
            " [-1.45377067e+00 -1.33376052e+00]\n",
            " [ 8.11977564e-01 -9.62538176e-01]\n",
            " [-1.90087885e+00  1.10307480e+00]\n",
            " [ 1.73753096e+00  1.06568991e+00]\n",
            " [ 1.15166168e+00 -1.48535329e+00]\n",
            " [ 1.47284387e+00  8.15094714e-01]\n",
            " [-2.60344058e+00  3.62653512e-01]\n",
            " [-1.15549932e+00 -1.66191412e-01]\n",
            " [-5.11752477e-01  5.89980153e-01]\n",
            " [ 2.06814047e-01 -3.47893828e-02]\n",
            " [ 9.67944218e-01  1.63913759e+00]\n",
            " [ 1.35039684e-01  8.38156513e-01]\n",
            " [-5.20476579e-01 -9.40400369e-01]\n",
            " [-2.55261971e-01  4.32945266e-01]\n",
            " [ 2.08966928e+00  9.33943384e-01]\n",
            " [-3.66038356e-02  2.29170281e-01]\n",
            " [-1.79340784e+00  6.57835259e-01]\n",
            " [-4.93392468e-01 -3.66170844e-01]\n",
            " [ 1.19602214e+00  1.02690421e+00]\n",
            " [ 2.61059758e-01 -6.52924982e-01]\n",
            " [ 2.78591011e-01  1.80495009e+00]\n",
            " [ 3.55576295e-02 -6.11893795e-01]\n",
            " [-1.78044385e+00  4.25215581e-01]\n",
            " [ 1.77258250e+00 -1.12764057e+00]\n",
            " [ 2.21684232e+00 -2.60529449e-01]\n",
            " [-5.67704261e-01 -7.73916717e-01]\n",
            " [-5.60119282e-02  1.05361574e+00]\n",
            " [ 2.13456566e+00 -6.00544174e-01]\n",
            " [ 1.44283481e+00 -1.38611277e+00]\n",
            " [ 2.11145271e+00  1.06269455e+00]\n",
            " [-2.15492303e+00  7.12493531e-01]\n",
            " [ 1.13397959e+00  1.46126218e+00]\n",
            " [ 2.48816764e+00  2.41034610e-01]\n",
            " [-1.18281654e+00  9.04234473e-01]\n",
            " [ 2.89544884e-01  1.98090502e+00]\n",
            " [-1.65580478e+00  1.33958290e-01]\n",
            " [ 8.82570740e-01  7.97217522e-01]\n",
            " [ 1.55177426e+00  8.56661165e-01]\n",
            " [-1.14933183e+00  6.04970885e-01]\n",
            " [ 1.27195463e+00 -6.12653792e-01]\n",
            " [-6.68032676e-01  9.15881225e-01]\n",
            " [ 1.98707545e+00  1.44995706e+00]\n",
            " [ 1.97997533e+00  1.21861046e+00]\n",
            " [-6.88053119e-01  7.04937008e-01]\n",
            " [-1.14682562e+00 -1.85863507e+00]\n",
            " [-1.57222867e-01  9.39777318e-01]\n",
            " [ 2.37719582e+00  1.73361924e+00]\n",
            " [ 7.44831014e-01 -2.06388142e+00]\n",
            " [ 2.11820431e+00  2.40417138e-01]\n",
            " [-1.66248391e+00 -8.85501057e-02]\n",
            " [ 2.14818124e-01  8.15919563e-01]\n",
            " [-2.10517757e-01 -5.53748703e-01]\n",
            " [ 2.22533356e-01  1.54074197e+00]\n",
            " [ 8.75740696e-01 -6.79683389e-01]\n",
            " [-7.23611072e-01 -1.87754668e-01]\n",
            " [-1.09584819e+00 -4.11168276e-01]\n",
            " [ 3.48658958e-01 -8.86882288e-01]\n",
            " [ 2.13496976e+00 -1.04803289e+00]\n",
            " [ 1.06650413e+00 -1.22189918e+00]\n",
            " [-1.17788376e+00 -2.30818885e+00]\n",
            " [ 2.37832454e+00 -7.16863890e-01]\n",
            " [ 2.80179959e+00 -6.87420525e-01]\n",
            " [-1.30702068e+00  1.14799398e+00]\n",
            " [ 1.65220480e+00  1.96542114e+00]\n",
            " [ 1.12819461e+00 -7.97155084e-01]\n",
            " [-1.90830312e+00  8.97238859e-01]\n",
            " [ 1.29987102e+00 -1.81354874e+00]\n",
            " [-7.40843692e-02 -1.00499085e+00]\n",
            " [-3.13264803e-01  1.99066961e-01]\n",
            " [-2.61228420e+00 -1.34625594e-01]\n",
            " [-7.77127105e-01  1.93498667e+00]\n",
            " [ 1.45677596e-01  2.83030818e-01]\n",
            " [ 2.02894470e+00 -9.65738930e-01]\n",
            " [ 5.70878629e-01  3.72526548e-01]\n",
            " [-4.84431011e-01 -1.11692960e+00]\n",
            " [-7.54985190e-01 -3.66335107e-01]\n",
            " [-2.24808734e+00  1.20390587e+00]\n",
            " [ 3.25262526e+00  5.49285454e-01]\n",
            " [-1.04648833e+00  4.77812098e-01]\n",
            " [-9.54183732e-01  5.50624508e-02]\n",
            " [-2.54708283e-01 -4.99834457e-01]\n",
            " [ 1.11567115e+00  6.11352401e-01]\n",
            " [-7.92960274e-01 -1.33010229e+00]\n",
            " [-1.26627313e+00 -1.55013258e+00]\n",
            " [-2.47069444e+00  2.87374802e-01]\n",
            " [-7.34057406e-01 -9.13016405e-01]\n",
            " [-1.00141519e+00  9.45828525e-01]\n",
            " [ 2.11119894e+00 -7.09334717e-01]\n",
            " [-1.01642405e+00 -5.65814461e-01]\n",
            " [-5.06450252e-01 -3.28527421e-01]\n",
            " [-4.89756917e-01 -2.32384947e-01]\n",
            " [-2.64510595e+00 -5.69989719e-01]\n",
            " [ 5.44704625e-01 -1.53349387e+00]\n",
            " [-7.75673376e-01 -7.25577751e-01]\n",
            " [-3.74202607e-01 -3.87041818e-01]\n",
            " [-1.52557512e+00 -2.82802829e-01]\n",
            " [ 4.50948467e-01 -1.09472053e+00]\n",
            " [ 1.09940147e+00 -7.20078283e-01]\n",
            " [-8.63742174e-01  1.51173136e+00]\n",
            " [-6.47590496e-01  6.45323401e-01]\n",
            " [-1.73610045e+00  2.17754806e+00]\n",
            " [-3.12133240e-02  1.04051399e+00]\n",
            " [ 2.21149018e-01 -1.96158077e+00]\n",
            " [ 2.43371918e+00  7.62372237e-01]\n",
            " [-2.26646397e+00 -3.89041712e-01]\n",
            " [-2.15154928e+00 -1.89529671e-01]\n",
            " [-1.28674309e+00 -1.15180680e+00]\n",
            " [ 7.37674382e-02  2.66632545e-01]\n",
            " [ 1.57997156e+00 -1.14715203e+00]\n",
            " [-1.49970748e+00  4.85089733e-01]\n",
            " [ 3.46612649e-01  1.03923792e+00]\n",
            " [-2.08971050e+00  1.77957519e-01]\n",
            " [ 1.93172681e+00 -1.54470785e+00]\n",
            " [ 2.37929290e+00 -3.53565657e-01]\n",
            " [-1.14698972e+00  1.59452176e+00]\n",
            " [ 2.65388925e-01 -5.57969201e-01]\n",
            " [-1.11959397e+00  6.48820473e-01]\n",
            " [ 1.25922054e+00 -1.27694469e-01]\n",
            " [-1.15306185e+00  1.28594492e+00]\n",
            " [ 4.62288816e-01  1.98974001e+00]\n",
            " [ 1.40773236e+00  1.04190532e+00]\n",
            " [-1.24405072e+00  9.00376707e-01]\n",
            " [ 3.43185666e+00 -2.09285127e-01]\n",
            " [ 1.50087267e+00  4.43448552e-01]\n",
            " [-2.34831309e+00  8.44196975e-01]\n",
            " [-1.91015500e+00 -2.91297726e-01]\n",
            " [-1.72998933e+00 -8.84229150e-02]\n",
            " [ 3.50312657e-01 -1.42378263e+00]\n",
            " [-2.52155462e+00 -5.68168978e-02]\n",
            " [-2.38922381e+00  1.10564183e-01]\n",
            " [-1.36566836e+00 -9.62196264e-01]\n",
            " [ 1.18676133e+00  1.00735392e+00]\n",
            " [-4.92218406e-02  6.13798642e-01]\n",
            " [ 2.14204634e+00  3.69529327e-01]\n",
            " [-2.95724059e-01 -6.12045807e-01]\n",
            " [ 1.82456424e+00  1.30876356e+00]\n",
            " [-7.76632068e-01  4.51055029e-01]\n",
            " [-6.88977203e-01 -6.49779413e-03]\n",
            " [ 7.70442986e-01  7.16325018e-02]\n",
            " [ 1.96313743e+00 -1.91619287e+00]\n",
            " [-6.64177325e-01 -1.10996465e+00]\n",
            " [ 2.05999028e+00  3.22484465e-01]\n",
            " [-1.68876228e+00 -7.57847356e-01]\n",
            " [ 2.31884201e+00 -1.03063311e-01]\n",
            " [-7.09259169e-01  2.10040330e-01]\n",
            " [-1.17055233e+00 -9.34541977e-01]\n",
            " [-2.18509881e+00 -8.52889004e-01]\n",
            " [-5.00738817e-01  5.49793805e-01]\n",
            " [-1.54017691e+00 -4.00649963e-01]\n",
            " [-7.03374747e-01  4.67104886e-01]\n",
            " [-2.01536424e+00 -7.54863686e-01]\n",
            " [-6.16215525e-01 -1.00316932e+00]\n",
            " [-8.75727420e-01 -4.39849374e-01]\n",
            " [-1.56567358e+00  1.30536860e+00]\n",
            " [-2.07594784e+00  7.75102246e-01]\n",
            " [-2.29558252e+00 -8.26226799e-01]\n",
            " [-2.34252759e+00 -1.71585510e-01]\n",
            " [-1.44202667e+00 -9.39115962e-01]\n",
            " [-1.07827652e+00  1.35598155e+00]\n",
            " [ 7.95397340e-01 -1.10054949e+00]\n",
            " [ 2.22551231e+00 -1.68975790e+00]\n",
            " [-5.65888414e-01  1.77478726e+00]\n",
            " [ 2.33973099e+00 -4.59370287e-01]\n",
            " [ 1.62928297e+00  1.00848566e+00]\n",
            " [-1.86320461e+00 -1.69107298e+00]\n",
            " [-1.19761348e+00  4.26216434e-01]\n",
            " [ 1.10053061e+00 -7.53565266e-01]\n",
            " [ 5.77614459e-01 -1.80134192e+00]\n",
            " [-8.81014771e-01  5.27445950e-01]\n",
            " [ 5.54535618e-01  1.65649561e+00]\n",
            " [-2.84003603e-01 -2.41363588e-01]\n",
            " [ 1.52199314e+00 -1.71310044e-01]\n",
            " [-6.87670041e-02 -4.28581808e-02]\n",
            " [-1.71278899e+00 -2.28312822e-01]\n",
            " [ 1.49343199e+00 -3.75111604e-02]\n",
            " [ 1.29348143e+00 -9.12903873e-01]\n",
            " [ 1.25869821e+00  8.58126201e-01]\n",
            " [ 2.21533615e+00 -1.34622295e+00]\n",
            " [-8.37160521e-01 -8.68079959e-01]\n",
            " [-2.62340129e+00  4.68140026e-01]\n",
            " [-1.54530481e-03 -8.39133080e-01]\n",
            " [-1.19326680e+00  2.25336616e+00]\n",
            " [ 1.60844762e-01 -6.06667712e-01]\n",
            " [-1.20801336e+00  4.50996015e-01]\n",
            " [-1.46502578e+00 -9.46833008e-01]\n",
            " [-2.71061115e-01 -4.13334180e-01]\n",
            " [-1.19152884e+00 -1.96555368e+00]\n",
            " [ 1.01440319e-01  2.19640951e+00]\n",
            " [ 4.08793427e-01  1.99199642e+00]\n",
            " [ 1.56580408e+00 -1.30657603e+00]\n",
            " [ 7.64971524e-01 -1.62560876e-02]\n",
            " [-7.73705343e-01  8.56658704e-01]\n",
            " [ 1.66194202e+00  8.59786441e-01]\n",
            " [-2.16296918e+00 -1.24024399e+00]\n",
            " [ 3.87022762e-01  1.38350508e+00]\n",
            " [ 1.64022608e+00 -9.12510787e-01]\n",
            " [ 3.20176874e-01  1.18575242e+00]\n",
            " [-2.09881465e+00 -1.29856924e+00]\n",
            " [ 1.77956084e+00  4.77241332e-01]\n",
            " [ 6.63811248e-01 -2.36284062e-01]\n",
            " [-4.71465213e-01 -2.17180588e-01]\n",
            " [-6.59765566e-01  1.69637449e-01]\n",
            " [-1.27248357e+00  5.45748581e-01]\n",
            " [ 2.20962289e-01  1.46122544e+00]\n",
            " [ 1.26430898e+00 -6.71066262e-01]\n",
            " [ 1.06050233e+00  1.20306927e+00]\n",
            " [-1.42035963e+00 -3.92483749e-01]\n",
            " [ 1.48141175e+00 -8.50349414e-01]\n",
            " [ 1.91548157e+00  1.95842172e+00]\n",
            " [-4.26223451e-01  8.54538903e-01]\n",
            " [ 1.57077072e+00 -7.65331379e-02]\n",
            " [-1.32669144e+00 -1.57267552e-01]\n",
            " [ 9.48662360e-01  6.41027071e-01]\n",
            " [ 2.46195024e+00 -5.45116425e-01]\n",
            " [-2.19058957e+00  1.21411413e+00]\n",
            " [-2.05956879e-01  7.19606603e-01]\n",
            " [-1.45678990e-01  1.66497693e+00]\n",
            " [ 1.95083445e+00  8.83076206e-01]\n",
            " [ 1.27346251e+00 -2.78094734e-01]\n",
            " [-9.42076807e-01  7.07887976e-02]\n",
            " [ 1.33336368e-01  3.39434803e-01]\n",
            " [-3.99791177e-01  3.28083989e-01]\n",
            " [ 6.21302975e-03 -2.90961906e-01]\n",
            " [ 1.41502979e+00 -4.36058048e-01]\n",
            " [-1.39286121e+00 -1.58773637e-01]\n",
            " [ 1.71314465e+00  2.94722848e-02]\n",
            " [ 1.11779957e+00  1.42692263e-01]\n",
            " [-2.02161786e+00 -1.99535099e-01]\n",
            " [-1.28858516e+00  3.49173018e-01]\n",
            " [ 1.32847039e+00 -1.32120277e-01]\n",
            " [-1.87774031e+00 -4.67920329e-02]\n",
            " [ 2.74933476e+00  1.93285867e+00]\n",
            " [-1.43700923e+00 -5.49786784e-01]\n",
            " [-1.94289323e+00  9.90488176e-01]\n",
            " [ 5.83418689e-01  7.52801659e-01]\n",
            " [-5.99532142e-01 -2.91174255e-01]\n",
            " [-1.89031760e+00  1.69081478e+00]\n",
            " [ 6.33091835e-01  1.25496510e+00]\n",
            " [-8.22710943e-01 -9.34955659e-01]\n",
            " [-2.26260330e+00  9.80456063e-02]\n",
            " [-7.47432627e-02 -6.15839757e-01]\n",
            " [-1.10272101e+00 -1.49868790e+00]\n",
            " [ 1.83488551e+00 -1.92121040e+00]\n",
            " [ 8.42637250e-01  1.38299619e+00]\n",
            " [-2.99450906e-01  4.57560621e-01]\n",
            " [ 8.04136387e-01  2.44870474e+00]\n",
            " [-1.73298100e-01 -2.49753445e-02]\n",
            " [-4.88257836e-01  1.81002899e+00]\n",
            " [ 7.45043182e-01  4.81626707e-02]\n",
            " [-2.82518756e+00  1.18260391e+00]\n",
            " [-5.56947731e-01  1.73783580e+00]\n",
            " [ 3.35189703e-01 -2.90480008e-01]\n",
            " [-2.41479553e+00  9.53028615e-01]\n",
            " [-8.57544276e-01  1.58571694e+00]\n",
            " [-1.83201478e+00  1.90771037e+00]\n",
            " [ 1.98922031e-03  7.75730485e-01]\n",
            " [ 2.43340666e+00  1.03024326e+00]\n",
            " [ 7.94151850e-01 -1.87579826e-01]\n",
            " [-1.93640557e+00 -1.16165099e+00]\n",
            " [ 1.13952071e+00 -1.53329132e+00]\n",
            " [ 3.79339868e-01 -1.92418797e-01]\n",
            " [-9.79292886e-01 -3.51252873e-01]\n",
            " [ 2.14736841e+00 -2.25839499e+00]\n",
            " [-5.34409307e-01 -1.25703074e+00]\n",
            " [-4.70201778e-01  1.28742043e+00]\n",
            " [-9.41527661e-01 -3.41789910e-01]\n",
            " [ 5.19694049e-01 -4.18372343e-01]\n",
            " [-1.35246707e+00  6.63397826e-01]\n",
            " [-1.40731556e-01 -8.30017671e-01]\n",
            " [-2.78153136e+00  8.75200292e-01]\n",
            " [ 1.30930545e+00 -1.93010877e-01]\n",
            " [ 1.83533290e+00  1.23321806e+00]\n",
            " [ 1.47099146e+00  6.68081242e-01]\n",
            " [ 1.12787713e-01  3.62194669e-01]\n",
            " [-4.74931470e-01  1.71861513e+00]\n",
            " [ 2.03530358e+00  5.86466767e-01]\n",
            " [ 5.01327046e-01 -9.73776560e-01]\n",
            " [-9.94261797e-01  6.46947800e-01]\n",
            " [-5.82937632e-01 -1.46616355e+00]\n",
            " [-1.97143284e+00  7.33568548e-01]\n",
            " [-2.41085779e+00 -7.78670176e-01]\n",
            " [ 2.71407247e+00 -8.42303302e-02]\n",
            " [-4.61879865e-02 -1.13552520e+00]\n",
            " [ 1.13898727e+00  2.80225569e-02]\n",
            " [-1.30150594e+00 -7.97050303e-01]\n",
            " [ 1.05255189e+00  7.89153703e-01]\n",
            " [-1.27030328e+00  2.22324427e+00]\n",
            " [ 1.63092864e+00 -9.02008314e-01]\n",
            " [-1.87421318e-01  2.39442174e-01]\n",
            " [-2.72485178e+00 -2.68744453e-01]\n",
            " [ 1.66174268e+00 -1.04928214e+00]\n",
            " [ 9.42601326e-01  9.08847430e-01]\n",
            " [ 4.39573558e-01  5.98125620e-01]\n",
            " [-1.49584755e+00 -1.95685486e-01]\n",
            " [ 2.30383456e+00  8.29564808e-01]\n",
            " [ 5.86831226e-01  2.05706474e-01]\n",
            " [ 1.18303860e+00  6.26802272e-01]\n",
            " [-1.96783400e+00  8.72959528e-01]\n",
            " [ 1.05471443e+00  4.38905061e-01]\n",
            " [-1.68348724e+00 -7.86598087e-01]\n",
            " [-1.03959645e-01  2.47215529e-02]\n",
            " [-8.41864068e-01  4.05765184e-01]\n",
            " [-2.00292706e-01  7.92354966e-01]\n",
            " [-1.48778895e+00  2.02038158e+00]\n",
            " [-1.47134360e+00 -6.12802814e-01]\n",
            " [-1.75929045e+00 -5.49485181e-01]\n",
            " [-5.97064022e-01 -4.90226669e-01]\n",
            " [ 1.78020085e+00 -1.09999142e+00]\n",
            " [ 5.81846022e-01  2.78217709e-01]\n",
            " [ 9.57120141e-01  4.85793933e-01]\n",
            " [-8.67388779e-02 -6.20589198e-01]\n",
            " [ 7.74710363e-02  3.17441851e-01]\n",
            " [-6.20203906e-01  4.24460126e-01]\n",
            " [-1.96630502e-01  2.12938226e+00]\n",
            " [ 5.81465163e-01  1.29239939e+00]\n",
            " [ 1.78795260e+00  4.98477366e-01]\n",
            " [-6.16621699e-01  1.04642758e+00]\n",
            " [-1.16846778e+00  1.17696003e+00]\n",
            " [-8.95143730e-01 -1.14620469e+00]\n",
            " [ 1.16637642e+00 -2.34001105e-01]\n",
            " [-1.26056681e+00  7.50752679e-01]\n",
            " [-6.97629966e-02 -1.36941292e-01]\n",
            " [ 1.48451695e+00 -9.07338619e-01]\n",
            " [ 4.56186178e-01 -4.31357104e-02]\n",
            " [ 1.11838005e+00  1.45831311e+00]\n",
            " [ 2.11563698e+00  1.07478837e+00]\n",
            " [ 1.03612990e+00 -1.14595557e-01]\n",
            " [ 1.12419945e+00  5.13072149e-01]\n",
            " [-5.20073320e-01 -8.44263729e-01]\n",
            " [-1.88165143e+00 -2.51433220e-01]\n",
            " [ 1.30350024e-01  2.45152982e-01]\n",
            " [-1.00879562e+00 -8.64539871e-01]\n",
            " [-3.14129977e-01  8.84757373e-02]\n",
            " [-1.05037054e+00 -1.39875847e+00]\n",
            " [-4.05071194e-01  1.26402374e+00]\n",
            " [ 2.26923042e-01 -1.17776846e+00]\n",
            " [ 7.87331168e-01  2.77971626e-01]\n",
            " [ 1.81492574e+00  5.17155183e-01]\n",
            " [ 2.11387031e+00  4.32163736e-01]\n",
            " [-1.21800218e+00  3.04180665e-03]\n",
            " [ 2.03839209e+00  9.91197199e-01]\n",
            " [ 2.23828505e+00  5.64925794e-01]\n",
            " [ 6.55902573e-01 -9.89347720e-01]\n",
            " [ 2.58729308e-01  3.23353197e-01]\n",
            " [ 9.82558621e-01 -8.02200244e-02]\n",
            " [ 1.06276730e-02  4.20909570e-03]\n",
            " [-4.51073675e-02 -1.79708232e+00]\n",
            " [ 4.40208434e-01 -6.51321668e-01]\n",
            " [-7.60087744e-01  1.63664672e+00]\n",
            " [-2.16925718e+00 -1.13773383e+00]\n",
            " [ 1.22832813e-01 -9.09963786e-01]\n",
            " [ 9.82390038e-01 -7.23334148e-01]\n",
            " [ 1.94960881e+00  1.06951463e+00]\n",
            " [ 4.75208901e-01 -5.70415632e-01]\n",
            " [-1.00548161e+00 -8.53092598e-01]\n",
            " [-4.45184393e-01  3.34781887e-01]\n",
            " [ 1.32455646e+00 -1.10883769e+00]\n",
            " [ 3.06035509e+00  3.10951769e-01]\n",
            " [ 1.07062903e+00 -1.89422185e-01]\n",
            " [ 1.02673065e+00 -9.58063693e-01]\n",
            " [ 3.98506733e-01 -6.87510697e-01]\n",
            " [-1.88426985e+00 -3.71152294e-01]\n",
            " [ 3.68218261e-01 -6.08550347e-01]\n",
            " [ 7.81319398e-01 -1.19611071e-01]\n",
            " [ 1.50603864e+00  3.97270529e-01]\n",
            " [ 1.14708516e+00  8.77148389e-01]\n",
            " [-1.29092708e+00 -1.01827613e+00]\n",
            " [-8.29520476e-01 -1.15802720e+00]\n",
            " [ 4.23840217e-01 -6.68860470e-01]\n",
            " [ 2.72780951e+00 -1.00811656e+00]\n",
            " [-1.71347014e+00 -1.74616277e+00]\n",
            " [ 1.35311789e-01 -4.07426828e-01]\n",
            " [ 7.70965436e-01 -5.41617893e-01]\n",
            " [-1.81841362e+00 -1.81184118e+00]\n",
            " [ 1.57728022e+00 -1.25196617e+00]\n",
            " [ 1.33392253e+00 -1.96667713e+00]\n",
            " [-6.49738410e-01  8.46965514e-01]\n",
            " [ 2.50572199e-01  9.75672598e-01]\n",
            " [-7.86976865e-02 -4.46123352e-01]\n",
            " [ 1.15710998e+00 -7.88743614e-01]\n",
            " [-3.47326287e-01 -8.18795752e-01]\n",
            " [ 8.04950350e-01 -4.51291119e-02]\n",
            " [-1.36266389e+00 -6.07951472e-01]\n",
            " [-1.58321297e+00 -8.97076396e-01]\n",
            " [ 7.49660842e-01 -2.31188482e-01]\n",
            " [ 4.27407146e-01  1.53418186e+00]\n",
            " [ 1.53288546e+00 -1.89875547e+00]\n",
            " [ 1.56688804e+00 -1.38565202e-01]\n",
            " [ 1.81601769e+00 -4.48287103e-03]\n",
            " [ 4.71182411e-01  1.35029996e+00]\n",
            " [ 1.45773548e+00  4.78432816e-01]\n",
            " [ 9.21613407e-01 -4.83602180e-01]\n",
            " [ 4.19691194e-01  1.23924532e+00]\n",
            " [ 7.86316775e-01 -2.00798966e-01]\n",
            " [ 2.02891721e+00 -1.29542125e-01]\n",
            " [ 4.58364267e-01 -1.59046948e+00]\n",
            " [ 1.49155789e+00  4.71782479e-01]\n",
            " [-1.26855907e+00 -8.62500949e-01]\n",
            " [ 2.20112949e+00  2.04963847e+00]\n",
            " [ 2.28333511e-01 -1.53157014e+00]\n",
            " [ 1.97612458e+00 -1.03738119e+00]\n",
            " [ 1.72439232e-01  1.28457507e+00]\n",
            " [-7.87166488e-01 -1.95267074e+00]\n",
            " [ 3.23195434e-01 -2.22309005e+00]\n",
            " [ 9.08206546e-01  1.54254961e+00]\n",
            " [ 1.91750297e+00  5.19264398e-01]\n",
            " [ 2.56329581e-01 -1.26254403e+00]\n",
            " [-2.39893732e+00  2.41091005e-01]\n",
            " [ 2.42329143e+00 -5.52036737e-01]\n",
            " [ 1.30833106e+00  5.82395223e-01]\n",
            " [-5.21881732e-01 -1.31061701e+00]\n",
            " [-5.69627260e-01  1.70356748e-02]\n",
            " [-4.97807878e-01 -9.14146686e-02]\n",
            " [ 8.08645648e-01  4.77187419e-01]\n",
            " [-1.71387538e-01 -5.20383147e-03]\n",
            " [-8.00374672e-01 -1.19066587e-01]\n",
            " [-8.82247954e-01  9.68944280e-01]\n",
            " [-2.28564910e+00  3.53951349e-01]\n",
            " [ 6.96757457e-01 -1.32461253e+00]\n",
            " [ 4.42055870e-03  1.23282070e+00]\n",
            " [ 1.74366109e+00  1.70829021e-01]\n",
            " [ 1.94000318e+00 -8.73809795e-01]\n",
            " [-5.32175148e-01  2.03872715e-01]\n",
            " [-4.56929639e-01 -1.14242461e+00]\n",
            " [ 1.78738795e+00 -2.17918452e-01]\n",
            " [ 7.74080586e-01  9.78033909e-01]\n",
            " [ 5.28987881e-01 -4.69861778e-01]\n",
            " [-8.58587735e-01 -1.27344577e+00]\n",
            " [ 2.49378481e+00  1.55192341e+00]\n",
            " [ 5.62769989e-01 -7.25444565e-01]\n",
            " [-2.80265154e-01 -2.82527058e-01]\n",
            " [-6.93953499e-01 -7.55029901e-01]\n",
            " [ 1.84102015e+00  1.76800258e+00]\n",
            " [ 1.20390291e+00  2.57068819e-01]\n",
            " [ 1.67895044e+00  1.85879137e-01]\n",
            " [ 1.58479385e+00  9.41785354e-01]\n",
            " [ 1.69822871e+00  9.20727535e-01]\n",
            " [-1.16163351e+00  5.42946775e-01]\n",
            " [ 1.32407203e+00  1.46927692e-03]\n",
            " [-2.38057555e+00  1.96364506e+00]\n",
            " [-2.04764950e+00 -6.64138041e-01]\n",
            " [ 5.57524662e-01 -1.81209908e+00]\n",
            " [-1.99335782e+00 -1.09265374e+00]\n",
            " [ 1.76637551e+00 -3.45075641e-01]\n",
            " [ 2.43516462e-02 -6.78694013e-01]\n",
            " [ 2.50508692e+00 -9.82332510e-01]\n",
            " [ 9.96259031e-02  5.11146282e-01]\n",
            " [-8.06638703e-01  5.35382978e-01]\n",
            " [-1.42508632e+00  1.48944139e+00]\n",
            " [-2.11520819e+00 -3.32120879e-01]\n",
            " [ 2.49716479e-01  8.82732829e-01]\n",
            " [-1.23994297e+00 -3.34345977e-01]\n",
            " [-2.19423107e+00 -3.05134659e-01]\n",
            " [-2.18159212e+00  3.95449200e-02]\n",
            " [-4.05253948e-01 -1.36820066e+00]\n",
            " [ 3.80612214e-01 -1.31801089e-01]\n",
            " [-2.47337907e+00 -4.63745021e-01]\n",
            " [-2.51138784e+00 -7.57199506e-01]\n",
            " [ 1.29820003e+00 -4.97039209e-01]\n",
            " [ 1.94660469e+00  1.05142466e+00]\n",
            " [ 1.03563024e+00 -2.17969353e+00]\n",
            " [-1.12234869e+00  2.88795178e-01]\n",
            " [-1.74630207e-02  2.66349714e-01]\n",
            " [-7.51671956e-01 -3.64621799e-02]\n",
            " [-9.02848174e-01  1.24198935e+00]\n",
            " [-4.63118193e-01 -9.21233471e-01]\n",
            " [ 2.30374354e-01  1.87954919e-01]\n",
            " [ 9.15469896e-01  5.46267614e-01]\n",
            " [ 1.15642454e+00 -7.22856771e-01]\n",
            " [-1.55264160e+00 -1.06620008e+00]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Importing necessary libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "import matplotlib.pyplot as plt\n",
        "file_path = r\"/content/archive.zip\"  # Replace with the correct path to your dataset\n",
        "df = pd.read_csv(file_path)\n",
        "# Display the first few rows of the dataset\n",
        "print(df.head())\n",
        "print(df.isnull().sum())\n",
        "X = df[['Ethnicity', 'ParentalEducation']]  # Features\n",
        "y = df['GradeClass']  # Target variable\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "# Initialize and train the linear regression model\n",
        "model = LinearRegression()\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "mse = mean_squared_error(y_test, y_pred)\n",
        "r2 = r2_score(y_test, y_pred)\n",
        "print(f\"Mean Squared Error: {mse}\")\n",
        "print(f\"R-squared: {r2}\")\n",
        "plt.scatter(y_test, y_pred)\n",
        "plt.xlabel('Actual Math Scores')\n",
        "plt.ylabel('Predicted Math Scores')\n",
        "plt.title('Actual vs Predicted Math Scores')\n",
        "plt.show()\n",
        "# Optional: Display the coefficients of the linear regression model\n",
        "print(f\"Coefficients: {model.coef_}\")\n",
        "print(f\"Intercept: {model.intercept_}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "zYisyrZqO9hD",
        "outputId": "b9135faa-4552-4fbc-e922-bc9531bf91cc"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   StudentID  Age  Gender  Ethnicity  ParentalEducation  StudyTimeWeekly  \\\n",
            "0       1001   17       1          0                  2        19.833723   \n",
            "1       1002   18       0          0                  1        15.408756   \n",
            "2       1003   15       0          2                  3         4.210570   \n",
            "3       1004   17       1          0                  3        10.028829   \n",
            "4       1005   17       1          0                  2         4.672495   \n",
            "\n",
            "   Absences  Tutoring  ParentalSupport  Extracurricular  Sports  Music  \\\n",
            "0         7         1                2                0       0      1   \n",
            "1         0         0                1                0       0      0   \n",
            "2        26         0                2                0       0      0   \n",
            "3        14         0                3                1       0      0   \n",
            "4        17         1                3                0       0      0   \n",
            "\n",
            "   Volunteering       GPA  GradeClass  \n",
            "0             0  2.929196         2.0  \n",
            "1             0  3.042915         1.0  \n",
            "2             0  0.112602         4.0  \n",
            "3             0  2.054218         3.0  \n",
            "4             0  1.288061         4.0  \n",
            "StudentID            0\n",
            "Age                  0\n",
            "Gender               0\n",
            "Ethnicity            0\n",
            "ParentalEducation    0\n",
            "StudyTimeWeekly      0\n",
            "Absences             0\n",
            "Tutoring             0\n",
            "ParentalSupport      0\n",
            "Extracurricular      0\n",
            "Sports               0\n",
            "Music                0\n",
            "Volunteering         0\n",
            "GPA                  0\n",
            "GradeClass           0\n",
            "dtype: int64\n",
            "Mean Squared Error: 1.4995019135032064\n",
            "R-squared: -0.003579775205907243\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficients: [-0.04631256  0.05713703]\n",
            "Intercept: 2.925512028187495\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "2bkgG6gsPFIn"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}